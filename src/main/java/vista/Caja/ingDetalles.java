/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package vista.Caja;

import controlador.Ctrl_CajaIngresos;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import modelo.Ingresos;

/**
 *
 * @author ZenBook
 */
public class ingDetalles extends javax.swing.JPanel {

    private JPanel contenedor;
    private int idPedido;
    private Ctrl_CajaIngresos controlador;

    /**
     * Creates new form ingDetalles
     */
    public ingDetalles(String idPedido, JPanel contenedor) {
        this.contenedor = contenedor;
        try {
            this.idPedido = Integer.parseInt(idPedido); // Convertir el código a int (id_pedido)
        } catch (NumberFormatException e) {
            this.idPedido = -1; // En caso de error, marcamos un ID inválido
        }
        this.controlador = new Ctrl_CajaIngresos(); // Asegúrate de que el controlador esté disponible

        initComponents();

        TableColumn editar = tablaDetalles.getColumnModel().getColumn(6);
        editar.setPreferredWidth(8); // Ajustar el ancho de la columna

        TableColumn eliminar = tablaDetalles.getColumnModel().getColumn(7);
        eliminar.setPreferredWidth(8); // Ajustar el ancho de la columna

        // Cargar datos después de inicializar componentes
        Ctrl_CajaIngresos.IngresoConDetalles ingreso = controlador.obtenerDetallesIngreso(this.idPedido);
        if (ingreso != null) {
            cargarDatos(this.idPedido, ingreso);
        } else {
            JOptionPane.showMessageDialog(this, "No se encontró el pedido con ID: " + this.idPedido,
                    "Error", JOptionPane.ERROR_MESSAGE);
        }

    }

    public void cargarDatos(int idPedido, Ctrl_CajaIngresos.IngresoConDetalles ingreso) {
        DecimalFormat df = new DecimalFormat("$#,##0.00");

        // Validar y establecer valores
        lblNPedido.setText(ingreso.getNumPedido() != null ? ingreso.getNumPedido() : "N/A");
        lblCliente.setText(ingreso.getNombreCliente() != null ? ingreso.getNombreCliente() : "N/A");
        lblnombre.setText(ingreso.getNombrePedido() != null ? ingreso.getNombrePedido() : "N/A");

        // Formatear montos
        lblMontoTotal.setText(df.format(ingreso.getMontoTotal()));
        lblPagado.setText(df.format(ingreso.getPagado()));
        lblDebido.setText(df.format(ingreso.getDebido()));

        // Cargar tabla de abonos
        DefaultTableModel model = (DefaultTableModel) tablaDetalles.getModel();
        model.setRowCount(0);

        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");

        for (Ingresos abono : ingreso.getAbonos()) {
            model.addRow(new Object[]{
                abono.getNumAbono(),
                abono.getFechaPago() != null ? sdf.format(abono.getFechaPago()) : "N/A",
                df.format(abono.getMonto()),
                abono.getMetodoPago() != null ? abono.getMetodoPago() : "N/A",
                abono.getReferencia() != null ? abono.getReferencia() : "",
                abono.getObservacion() != null ? abono.getObservacion() : "",
                "Editar",
                "Eliminar"
            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        btnVolver = new RSMaterialComponent.RSButtonShape();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaDetalles = new RSMaterialComponent.RSTableMetroCustom();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel16 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        lblNPedido = new javax.swing.JLabel();
        btnAñadir = new RSMaterialComponent.RSButtonShape();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lblDebido = new javax.swing.JLabel();
        lblMontoTotal = new javax.swing.JLabel();
        lblCliente = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        lblPagado = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        lblnombre = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1230, 640));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setPreferredSize(new java.awt.Dimension(1230, 640));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnVolver.setBackground(new java.awt.Color(46, 49, 82));
        btnVolver.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        btnVolver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/volver (1).png"))); // NOI18N
        btnVolver.setText(" Volver");
        btnVolver.setBackgroundHover(new java.awt.Color(67, 150, 209));
        btnVolver.setFont(new java.awt.Font("Roboto Bold", 1, 16)); // NOI18N
        btnVolver.setForma(RSMaterialComponent.RSButtonShape.FORMA.ROUND);
        btnVolver.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });
        jPanel2.add(btnVolver, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 110, 30));

        tablaDetalles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Fecha", "Cantidad", "Metodo de pago", "Referencia", "Observaciones", "Editar", "Eliminar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaDetalles.setBackgoundHead(new java.awt.Color(46, 49, 82));
        tablaDetalles.setBackgoundHover(new java.awt.Color(109, 160, 221));
        tablaDetalles.setBorderHead(null);
        tablaDetalles.setBorderRows(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        tablaDetalles.setColorBorderHead(new java.awt.Color(46, 49, 82));
        tablaDetalles.setColorBorderRows(new java.awt.Color(46, 49, 82));
        tablaDetalles.setColorPrimaryText(new java.awt.Color(0, 0, 0));
        tablaDetalles.setColorSecondary(new java.awt.Color(255, 255, 255));
        tablaDetalles.setColorSecundaryText(new java.awt.Color(0, 0, 0));
        tablaDetalles.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        tablaDetalles.setFontHead(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        tablaDetalles.setFontRowHover(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        tablaDetalles.setFontRowSelect(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        tablaDetalles.setModelSelection(RSMaterialComponent.RSTableMetroCustom.SELECTION_ROWS.MULTIPLE_INTERVAL_SELECTION);
        tablaDetalles.setSelectionBackground(new java.awt.Color(109, 160, 221));
        tablaDetalles.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaDetallesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablaDetalles);
        tablaDetalles.getColumnModel().getColumn(0).setPreferredWidth(10);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 240, 950, 230));
        jPanel2.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 480, 950, 10));
        jPanel2.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 160, 950, 10));

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 17)); // NOI18N
        jLabel16.setText("Debido:");
        jPanel2.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 557, -1, -1));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel11.setText("N° Pedido:");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 120, 100, 20));

        lblNPedido.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblNPedido.setText("jlabel");
        jPanel2.add(lblNPedido, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 120, 160, 20));

        btnAñadir.setBackground(new java.awt.Color(46, 49, 82));
        btnAñadir.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        btnAñadir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/anadir (1).png"))); // NOI18N
        btnAñadir.setText(" Añadir abono");
        btnAñadir.setBackgroundHover(new java.awt.Color(67, 150, 209));
        btnAñadir.setFont(new java.awt.Font("Roboto Bold", 1, 15)); // NOI18N
        btnAñadir.setForma(RSMaterialComponent.RSButtonShape.FORMA.ROUND);
        btnAñadir.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnAñadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAñadirActionPerformed(evt);
            }
        });
        jPanel2.add(btnAñadir, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 190, 150, 30));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Detalles Ingreso");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 4, 150, 30));

        jPanel2.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 50, 950, 40));

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel17.setText("Abonos:");
        jPanel2.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 170, 190, 20));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel9.setText("Cliente:");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 120, -1, 20));

        lblDebido.setFont(new java.awt.Font("Segoe UI", 1, 17)); // NOI18N
        lblDebido.setText("0.00");
        jPanel2.add(lblDebido, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 557, -1, -1));

        lblMontoTotal.setFont(new java.awt.Font("Segoe UI", 1, 17)); // NOI18N
        lblMontoTotal.setText("0.00");
        jPanel2.add(lblMontoTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 492, 120, -1));

        lblCliente.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblCliente.setText("jlabel");
        jPanel2.add(lblCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(918, 120, 170, 20));

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 17)); // NOI18N
        jLabel18.setText("Total a pagar:");
        jPanel2.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 490, -1, -1));

        lblPagado.setFont(new java.awt.Font("Segoe UI", 1, 17)); // NOI18N
        lblPagado.setText("0.00");
        jPanel2.add(lblPagado, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 523, -1, -1));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel12.setText("Nom. Pedido:");
        jPanel2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 120, 120, 20));

        lblnombre.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblnombre.setText("jlabel");
        jPanel2.add(lblnombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 120, 210, 20));

        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 17)); // NOI18N
        jLabel19.setText("Total pagado:");
        jPanel2.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 523, -1, -1));

        add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1240, 740));
    }// </editor-fold>//GEN-END:initComponents

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        // Crear una nueva instancia de pedido pasando el contenedor
        ingresos h = new ingresos(contenedor);
        h.setSize(1230, 640);
        h.setLocation(0, 0);
        
        contenedor.removeAll();
        contenedor.add(h);
        contenedor.revalidate();
        contenedor.repaint();
    }//GEN-LAST:event_btnVolverActionPerformed

    private void tablaDetallesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaDetallesMouseClicked
        int column = tablaDetalles.getColumnModel().getColumnIndexAtX(evt.getX());
        int row = tablaDetalles.rowAtPoint(evt.getPoint());

        // Verificar si se hizo clic en la columna "Editar" (columna 6)
        if (column == 6 && row >= 0) {
            // Obtener el ID del abono desde la primera columna (num_abono)
            int numAbono = Integer.parseInt(tablaDetalles.getValueAt(row, 0).toString());

            // Obtener todos los datos del abono seleccionado
            String fecha = tablaDetalles.getValueAt(row, 1).toString();
            String montoStr = tablaDetalles.getValueAt(row, 2).toString().replace("$", "").replace(",", "");
            double monto = Double.parseDouble(montoStr);
            String metodoPago = tablaDetalles.getValueAt(row, 3).toString();
            String referencia = tablaDetalles.getValueAt(row, 4).toString();
            String observacion = tablaDetalles.getValueAt(row, 5).toString();

            // Obtener el ID real del abono desde la base de datos
            List<Ingresos> abonos = controlador.obtenerAbonosPorPedido(idPedido);
            Ingresos abonoSeleccionado = abonos.stream()
                    .filter(a -> a.getNumAbono() == numAbono)
                    .findFirst()
                    .orElse(null);

            if (abonoSeleccionado != null) {
                // Abrir el diálogo de edición
                iAbonoEditar dialog = new iAbonoEditar(
                        (java.awt.Frame) SwingUtilities.getWindowAncestor(this),
                        true,
                        abonoSeleccionado.getIdAbono(),
                        idPedido,
                        lblNPedido.getText(),
                        controlador
                );
                dialog.setLocationRelativeTo(null);
                dialog.setVisible(true);

                // Si se guardaron cambios, actualizar la tabla
                if (dialog.isGuardado()) {
                    Ctrl_CajaIngresos.IngresoConDetalles ingreso = controlador.obtenerDetallesIngreso(idPedido);
                    if (ingreso != null) {
                        cargarDatos(idPedido, ingreso);
                    }
                }
            }
        }

        // Verificar si se hizo clic en la columna "Eliminar" (columna 7)
        if (column == 7 && row >= 0) {
            int confirmacion = JOptionPane.showConfirmDialog(
                    this,
                    "¿Está seguro que desea eliminar este abono?",
                    "Confirmar eliminación",
                    JOptionPane.YES_NO_OPTION
            );

            if (confirmacion == JOptionPane.YES_OPTION) {
                int numAbono = Integer.parseInt(tablaDetalles.getValueAt(row, 0).toString());

                // Obtener el ID real del abono desde la base de datos
                List<Ingresos> abonos = controlador.obtenerAbonosPorPedido(idPedido);
                Ingresos abonoEliminar = abonos.stream()
                        .filter(a -> a.getNumAbono() == numAbono)
                        .findFirst()
                        .orElse(null);

                if (abonoEliminar != null) {
                    boolean eliminado = controlador.eliminarAbono(abonoEliminar.getIdAbono());
                    if (eliminado) {
                        JOptionPane.showMessageDialog(this, "Abono eliminado correctamente", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                        // Actualizar la tabla
                        Ctrl_CajaIngresos.IngresoConDetalles ingreso = controlador.obtenerDetallesIngreso(idPedido);
                        if (ingreso != null) {
                            cargarDatos(idPedido, ingreso);
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Error al eliminar el abono", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
        }
    }//GEN-LAST:event_tablaDetallesMouseClicked

    private void btnAñadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAñadirActionPerformed
        try {
            // Verificar que tenemos un ID de pedido válido
            if (idPedido <= 0) {
                JOptionPane.showMessageDialog(this,
                        "No se ha seleccionado un pedido válido para agregar abonos",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Verificar si el pedido ya está pagado completamente
            Ctrl_CajaIngresos.IngresoConDetalles ingreso = controlador.obtenerDetallesIngreso(idPedido);
            if (ingreso != null && ingreso.getDebido() <= 0) {
                JOptionPane.showMessageDialog(this,
                        "Este pedido ya ha sido pagado completamente",
                        "Información",
                        JOptionPane.INFORMATION_MESSAGE);
                return;
            }

            // Crear y mostrar el diálogo para nuevo abono
            iAbonoNuevo dialog = new iAbonoNuevo(
                    (java.awt.Frame) SwingUtilities.getWindowAncestor(this),
                    true,
                    idPedido,
                    lblNPedido.getText(),
                    controlador
            );

            // Centrar el diálogo respecto al panel principal
            dialog.setLocationRelativeTo(null);
            dialog.setVisible(true);

            // Si se guardó el nuevo abono, actualizar la tabla
            if (dialog.isGuardado()) {
                // Actualizar los datos mostrados
                Ctrl_CajaIngresos.IngresoConDetalles ingresoActualizado = controlador.obtenerDetallesIngreso(idPedido);
                if (ingresoActualizado != null) {
                    cargarDatos(idPedido, ingresoActualizado);

                    // Mostrar mensaje de éxito
                    JOptionPane.showMessageDialog(this,
                            "Abono registrado exitosamente",
                            "Éxito",
                            JOptionPane.INFORMATION_MESSAGE);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                    "Error al intentar agregar un nuevo abono: " + e.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnAñadirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private RSMaterialComponent.RSButtonShape btnAñadir;
    private RSMaterialComponent.RSButtonShape btnVolver;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel lblCliente;
    private javax.swing.JLabel lblDebido;
    private javax.swing.JLabel lblMontoTotal;
    private javax.swing.JLabel lblNPedido;
    private javax.swing.JLabel lblPagado;
    private javax.swing.JLabel lblnombre;
    private RSMaterialComponent.RSTableMetroCustom tablaDetalles;
    // End of variables declaration//GEN-END:variables
}
